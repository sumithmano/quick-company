{"version":3,"sources":["services/BaseService.js","services/UserService.js","services/CompanyService.js","services/FavoutiteService.js","components/CompanyItem.js","components/Company.js","components/About.js","components/Login.js","components/Create.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["BaseService","baseUrl","UserService","payload","axios","post","then","response","data","localStorage","setItem","id","userId","getItem","url","catch","err","console","log","finally","removeItem","CompanyService","params","access_token","filter","include","get","delete","CompanyItem","props","className","item","name","onClick","toggleFavourite","isFavourite","Company","state","rawCompanyList","processedList","enableSort","searchKey","bind","toggleSort","onSearchChange","this","getCompanyList","onlyFav","map","list","favourites","some","fav","setState","history","push","company","find","FavoutiteService","removeFavourite","addFavourite","comapanyId","includes","sort","processList","e","target","value","to","autoComplete","type","onChange","placeholder","htmlFor","length","key","Component","withRouter","About","Login","onSubmit","preventDefault","email","emailRef","password","passwordRef","login","style","width","src","display","padding","border","minWidth","ref","href","passwordRef1","passwordRef2","create","M","toast","html","classes","Main","exact","path","component","render","isAthenticated","Create","Navbar","onSideClose","logoutClick","Sidenav","init","sidenav","getInstance","close","logout","data-target","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e422e6d7.chunk.js","sourcesContent":["\n\nclass BaseService {\n\n    constructor() {\n    }\n\n    static baseUrl = \"http://localhost:3000/api\"\n\n}\n\nexport default BaseService","import BaseService from './BaseService'\nimport axios from 'axios'\n\nclass UserService extends BaseService {\n    constructor() {\n        super()\n    }\n\n    static login(payload) {\n        let url = \"http://localhost:3000/api\" + \"/Users\" + \"/login\"\n        return axios.post(url, payload)\n            .then(response => {\n                if(response.data) {\n                    localStorage.setItem('access_token', response.data.id);\n                    localStorage.setItem('userId', response.data.userId);\n                }\n                return response.data\n            })\n    }\n\n    static create(payload) {\n        let url = \"http://localhost:3000/api\" + \"/Users\" + \"\"\n        return axios.post(url, payload)\n            .then(response => {\n                // if(response.data) {\n                //     localStorage.setItem('access_token', response.data.id);\n                //     localStorage.setItem('userId', response.data.userId);\n                // }\n                return response.data\n            })\n    }\n\n    static isAthenticated() {\n        return !!localStorage.getItem('access_token')\n    }\n\n    static userId() {\n        return localStorage.getItem('userId')\n    }\n\n    static logout() {\n        let access_token = localStorage.getItem('access_token')\n        let url = \"http://localhost:3000/api\" + \"/Users\" + \"/logout\" + \"?access_token=\" + access_token\n        return axios.post(url)\n            .catch(err => console.log(err))\n            .finally(() => {\n                localStorage.removeItem('access_token');\n            })\n    }\n}\n\nexport default UserService","import BaseService from './BaseService'\nimport axios from 'axios'\n\nclass CompanyService extends BaseService {\n    constructor() {\n        super()\n    }\n\n    // TODO: send access_token through headers\n    // https://bezkoder.com/react-jwt-auth/#Add_Navbar_and_define_Routes\n    static getCompanyList() {\n        let access_token = localStorage.getItem('access_token')\n        let url = \"http://localhost:3000/api\" + \"/companies\" + \"\"\n        let params = {\n            access_token,\n            filter: {\n                include: \"favourites\"\n            }\n        }\n        return axios.get(url, { params })\n            .then(response => {\n                return response && response.data || []\n            })\n    }\n}\n\nexport default CompanyService","import BaseService from './BaseService'\nimport axios from 'axios'\n\nclass CompanyService extends BaseService {\n    constructor() {\n        super()\n    }\n\n    static addFavourite(payload) {\n        // let access_token = localStorage.getItem('access_token')\n        let url = \"http://localhost:3000/api\" + \"/favourites\" + \"\"\n        return axios.post(url, payload)\n            .then(response => {\n                return response && response.data || {}\n            })\n    }\n\n    static removeFavourite(id) {\n        // let access_token = localStorage.getItem('access_token')\n        let url = \"http://localhost:3000/api\" + \"/favourites\" + `/${id}`\n        return axios.delete(url)\n            .then(response => {\n                return response && response.data || {}\n            })\n    }\n}\n\nexport default CompanyService","import React from 'react'\n\nconst CompanyItem = (props) => (\n    <li className=\"collection-item row\">\n        {props.item.name}\n        <button className=\"btn btn-small btn-floating yellow right\" onClick={() => props.toggleFavourite(props.item)}>\n            {props.item.isFavourite ? <i className=\"fa fa-star\"></i> : <i className=\"fa fa-plus\"></i>}\n        </button>\n    </li>\n)\n\nexport default CompanyItem","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport CompanyService from '../services/CompanyService'\nimport UserService from '../services/UserService'\nimport FavoutiteService from '../services/FavoutiteService'\nimport CompanyItem from './CompanyItem'\n\nclass Company extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            rawCompanyList: [],\n            processedList: [],\n            userId: '',\n            enableSort: false,\n            searchKey: ''\n        }\n        this.toggleFavourite = this.toggleFavourite.bind(this)\n        this.toggleSort = this.toggleSort.bind(this)\n        this.onSearchChange = this.onSearchChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.getCompanyList()\n    }\n\n    getCompanyList() {\n        CompanyService.getCompanyList()\n            .then(response => {\n                let userId = UserService.userId()\n                let onlyFav = this.props.onlyFav\n                let rawCompanyList = response.map(list => ({\n                    ...list,\n                    isFavourite: list.favourites.some(fav => fav.userId === userId)\n                })).filter(list => !onlyFav || list.isFavourite)\n                this.setState({ \n                    rawCompanyList: rawCompanyList,\n                    processedList: rawCompanyList,\n                    userId: UserService.userId()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.props.history.push(\"/login\");\n            })\n    }\n\n    toggleFavourite(company) {\n        let userId = this.state.userId\n        if (company.isFavourite) {\n            let fav = company.favourites.find(fav => fav.userId === userId)\n            FavoutiteService.removeFavourite(fav.id)\n            .then((response) => {\n                this.getCompanyList()\n            }).catch(err => console.log(err))\n        } else {\n            FavoutiteService.addFavourite({\n                userId: userId,\n                comapanyId: company.id\n            }).then((response) => {\n                this.getCompanyList()\n            }).catch(err => console.log(err))\n        }\n    }\n\n    processList() {\n        debugger\n        const { rawCompanyList, searchKey, enableSort } = this.state\n        let processedList = rawCompanyList.filter(list => list.name.includes(searchKey))\n        if (enableSort) {\n            processedList.sort()\n        }\n        this.setState({ processedList: processedList })\n    }\n\n    toggleSort() {\n        this.setState({enableSort: !this.state.enableSort}, () => this.processList())\n    }\n\n    onSearchChange(e) {\n        this.setState({searchKey: e.target.value}, () => this.processList())\n    }\n\n    render() {\n        const { processedList, userId, enableSort } = this.state\n        return (\n            <div className=\"section\">\n                { this.props.onlyFav\n                    ? <Link className=\"btn grey\"  to=\"/\">BACK</Link>\n                    : <Link className=\"btn\"  to=\"/favourite\">Favourite</Link>\n                }\n                <button onClick={this.toggleSort} className={`btn right ${enableSort?\"\":\"grey\"}`}>\n                    <i className=\"fa fa-sort\"></i>\n                </button>\n                <div className=\"nav-wrapper\">\n                    <form autoComplete=\"off\">\n                        <div className=\"input-field\">\n                            <input id=\"search\" type=\"search\" onChange={this.onSearchChange} placeholder=\"search here\" />\n                            <label className=\"label-icon\" htmlFor=\"search\"><i className=\"fa fa-search\"></i></label>\n                            {/* <i className=\"fa fa-close\"></i> */}\n                        </div>\n                    </form>\n                </div>\n                {\n                    processedList.length ? (\n                        <ul className=\"collection\">\n                            {\n                                processedList.map(item => (\n                                    <CompanyItem item={item}\n                                        key={item.name} userId={userId}\n                                        toggleFavourite={this.toggleFavourite}\n                                    ></CompanyItem>\n                                ))\n                            }\n                        </ul>\n                    ) : (\n                        <div className=\"section\">No Company available</div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Company)\n","import React from 'react'\n\nconst About = () => (\n    <div><h1>About</h1></div>\n)\n\nexport default About ","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport UserService from '../services/UserService'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        // TODO: need to encrypt payload\n        const payload = {\n            email: this.emailRef.value,\n            password: this.passwordRef.value\n        }\n        \n        UserService.login(payload)\n            .then(response => {\n                this.props.history.push(\"/\")\n            })\n            .catch(err =>  console.log(err))\n\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <center>\n                    <img className=\"responsive-img\" style={{ width: \"100px\" }} src=\"./icon.svg\" />\n                    <br /><br />\n\n                    <h5 className=\"indigo-text\">Please, login into your account</h5>\n                    <br />\n\n                    <div className=\"container\">\n                        <div className=\"z-depth-1 grey lighten-4 row\" style={{ display: \"inline-block\", padding: \"32px 48px 0px 48px\", border: \"1px solid #EEE\", minWidth: \"390px\" }}>\n\n                            <form className=\"col s12\" onSubmit={this.onSubmit}>\n                                <div className='row'>\n                                    <div className='col s12'>\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='input-field s12'>\n                                        <input className='validate' type='email' name='email' ref={email => this.emailRef = email} />\n                                        <label htmlFor='email'>Enter your email</label>\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='input-field col s12'>\n                                        <input className='validate' type='password' name='password' ref={password => this.passwordRef = password} />\n                                        <label htmlFor='password'>Enter your password</label>\n                                    </div>\n                                    <label className=\"right\">\n                                        <a className='pink-text' href='#!'><b>Forgot Password?</b></a>\n                                    </label>\n                                </div>\n\n                                <br />\n                                <center>\n                                    <div className='row'>\n                                        <button type='submit' name='btn_login' className='col s12 btn btn-large waves-effect indigo'>Login</button>\n                                    </div>\n                                </center>\n                            </form>\n                        </div>\n                    </div>\n                    <Link to=\"/create\">Create account</Link>\n                </center>\n\n                <br /><br />\n                <br /><br />\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Login)","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport UserService from '../services/UserService'\n\n/* global M */\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n\n        if (this.passwordRef1.value != this.passwordRef2.value) {\n            M.toast({html: 'Passwords don\\'t match', classes: 'rounded'})\n            return\n        }\n\n        // TODO: need to encrypt payload\n        const payload = {\n            email: this.emailRef.value,\n            password: this.passwordRef1.value\n        }\n        \n        UserService.create(payload)\n            .then(response => {\n                this.props.history.push(\"/login\")\n            })\n            .catch(err =>  console.log(err))\n\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <center>\n                    <img className=\"responsive-img\" style={{ width: \"100px\" }} src=\"./icon.svg\" />\n                    <br /><br />\n\n                    <h5 className=\"indigo-text\">Create your account</h5>\n                    <br />\n\n                    <div className=\"container\">\n                        <div className=\"z-depth-1 grey lighten-4 row\" style={{ display: \"inline-block\", padding: \"32px 48px 0px 48px\", border: \"1px solid #EEE\", minWidth: \"390px\" }}>\n\n                            <form className=\"col s12\" onSubmit={this.onSubmit}>\n                                <div className='row'>\n                                    <div className='col s12'>\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='input-field s12'>\n                                        <input className='validate' type='email' name='email' ref={email => this.emailRef = email} />\n                                        <label htmlFor='email'>Enter your email</label>\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='input-field col s12'>\n                                        <input className='validate' type='password' name='password' ref={password => this.passwordRef1 = password} />\n                                        <label htmlFor='password'>Enter your password</label>\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='input-field col s12'>\n                                        <input className='validate' type='password' name='password' ref={password => this.passwordRef2 = password} />\n                                        <label htmlFor='password'>Confirm your password</label>\n                                    </div>\n                                </div>\n\n                                <center>\n                                    <div className='row'>\n                                        <button type='submit' name='btn_login' className='col s12 btn btn-large waves-effect indigo'>Create</button>\n                                    </div>\n                                </center>\n                            </form>\n                        </div>\n                    </div>\n                </center>\n\n                <br /><br />\n                <br /><br />\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Login)","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport UserService from '../services/UserService'\n\nimport Company from './Company'\nimport About from './About'\nimport Login from './Login'\nimport Create from './Create'\n\n// const ProtectedRoute = ({ component: Component, ...rest }) => (\n//     <Route {...rest} render={(props) => (\n//         UserService.isAthenticated()\n//           ? <Component {...props} />\n//           : <Redirect to='/login' />\n//       )} />\n// )\n\nconst Main = () => (\n    <main>\n        <Switch>\n            <Route exact path='/about' component={About} />\n            <Route exact path='/' render={() =>  UserService.isAthenticated() ? <Company key=\"1\" /> : <Redirect to=\"/login\" />} />\n            <Route exact path='/favourite' render={() =>  UserService.isAthenticated() ? <Company key=\"2\" onlyFav={true}/> : <Redirect to=\"/login\" />} />\n            {/* <ProtectedRoute exact path='/' component={Company} /> */}\n            <Route exact path='/login' render={() =>  !UserService.isAthenticated() ? <Login /> : <Redirect to=\"/\" />} />\n            <Route exact path='/create' render={() =>  !UserService.isAthenticated() ? <Create /> : <Redirect to=\"/\" />} />\n        </Switch>\n    </main>\n)\n\nexport default Main","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport UserService from '../services/UserService'\n/* global M */\n\nclass Navbar extends Component {\n\n    constructor(props) {\n        super(props)\n        // this.state = { show: UserService.isAthenticated() }\n        this.onSideClose = this.onSideClose.bind(this);\n        this.logoutClick = this.logoutClick.bind(this);\n        // this.checkAuthentication = this.checkAuthentication.bind(this);\n    }\n\n    componentDidMount() {\n        M.Sidenav.init(this.sidenav)\n        // window.addEventListener('storage', this.checkAuthentication)\n    }\n\n    // componentWillUnmount() {\n    //     debugger\n    //     window.removeEventListener('storage', this.checkAuthentication)\n    // }\n\n    // checkAuthentication() {\n    //     console.log('------sadf checkAuthentication')\n    //     this.setState({ show: UserService.isAthenticated() })\n    // }\n\n    onSideClose() {\n        var instance = M.Sidenav.getInstance(this.sidenav)\n        instance.close()\n    }\n\n    logoutClick() {\n        UserService.logout()\n            .finally(() => {\n                this.props.history.push(\"/login\");\n            })\n    }\n\n    render() {\n        if (!UserService.isAthenticated()) {\n            return null\n        }\n        return (\n            <div>\n                <nav className=\"blue darken-3\">\n                    <div className=\"nav-wrapper\">\n                        <a href=\"/\" className=\"brand-logo center\">Quick Company</a>\n                        <a data-target=\"main-menu\" className=\"sidenav-trigger show-on-large\">\n                            <i className=\"fa fa-bars\"></i>\n                        </a>\n                        <ul className=\"right hide-on-small-only\">\n                            <li><Link to=\"/\">Company</Link></li>\n                            <li><Link to=\"/about\">About</Link></li>\n                            <li><a type=\"button\" onClick={this.logoutClick}>Logout</a></li>\n                        </ul>\n                    </div>\n                </nav>\n\n                <ul onClick={this.onSideClose} ref={ (sidenav) => {this.sidenav = sidenav} } className=\"sidenav\" id=\"main-menu\">\n                    <li><Link to=\"/\"><i className=\"fa fa-suitcase\"></i>Company</Link></li>\n                    <li><Link to=\"/about\"><i className=\"fa fa-question-circle\"></i>About</Link></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Navbar)\n","import React, { useEffect, useState } from 'react';\nimport Main from './components/Main'\nimport Navbar from './components/Navbar'\nimport './App.css';\nimport UserService from './services/UserService'\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Main />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}